char                   8 bits   signed, align   8, undefined endianness
signed char            8 bits   signed, align   8, undefined endianness
unsigned char          8 bits unsigned, align   8, undefined endianness

short                 16 bits   signed, align   8, little-endian
unsigned short        16 bits unsigned, align   8, little-endian

int                   32 bits   signed, align   8, little-endian
unsigned              32 bits unsigned, align   8, little-endian

long                  32 bits   signed, align   8, little-endian
unsigned long         32 bits unsigned, align   8, little-endian

float                 32 bits, align   8,
                     mantissa is  24 bits,
                     exponent is  7 bits, range   -127 ..    127
        Unrecognized floating-point format

double                64 bits, align   8,
                     mantissa is  56 bits,
                     exponent is  7 bits, range   -127 ..    127
        Unrecognized floating-point format

long double           64 bits, align   8,
                     mantissa is  56 bits,
                     exponent is  7 bits, range   -127 ..    127
        Unrecognized floating-point format

ptrdiff_t             32 bits   signed, align   8, little-endian
size_t                32 bits unsigned, align   8, little-endian
wchar_t               32 bits unsigned, align   8, little-endian

time_t                32 bits unsigned, align   8, little-endian
clock_t               32 bits   signed, align   8, little-endian
struct tm            288 bits ( 9 words) align   8

void*                 32 bits align   8
char*                 32 bits align   8
int*                  32 bits align   8
double*               32 bits align   8
struct{int x;}*       32 bits align   8
simple_func_ptr       32 bits align   8
        [typedef void(*simple_func_ptr)(void);]
complex_func_ptr      32 bits align   8
        [typedef double(*complex_func_ptr)(int*,char**);]

>>> There is no 64-bit integer type
>>> There is no 128-bit floating-point type
