char                   8 bits unsigned, align   8, undefined endianness
signed char            8 bits   signed, align   8, undefined endianness
unsigned char          8 bits unsigned, align   8, undefined endianness

short                 64 bits   signed, align  64, big-endian
unsigned short        64 bits unsigned, align  64, big-endian

int                   64 bits   signed, align  64, big-endian
unsigned              64 bits unsigned, align  64, big-endian

long                  64 bits   signed, align  64, big-endian
unsigned long         64 bits unsigned, align  64, big-endian

long long             64 bits   signed, align  64, big-endian
unsigned long long    64 bits unsigned, align  64, big-endian

float                 64 bits, align  64,
                     mantissa is  47 bits,
                     exponent is 13 bits, range  -8189 ..   8190
        Looks like 64-bit Cray
double                64 bits, align  64,
                     mantissa is  47 bits,
                     exponent is 13 bits, range  -8189 ..   8190
        Looks like 64-bit Cray
long double          128 bits, align  64,
                     mantissa is  94 bits,
                     exponent is 13 bits, range  -8189 ..   8190
        Looks like 128-bit Cray

ptrdiff_t             64 bits   signed, align  64, big-endian
size_t                64 bits unsigned, align  64, big-endian
wchar_t               64 bits   signed, align  64, big-endian

time_t                64 bits   signed, align  64, big-endian
clock_t               64 bits   signed, align  64, big-endian
struct tm            576 bits ( 9 words) align  64

void*                 64 bits align  64
char*                 64 bits align  64
int*                  64 bits align  64
double*               64 bits align  64
struct{int x;}*       64 bits align  64
simple_func_ptr       64 bits align  64
        [typedef void(*simple_func_ptr)(void);]
complex_func_ptr      64 bits align  64
        [typedef double(*complex_func_ptr)(int*,char**);]

>>> There is no 16-bit integer type
>>> There is no 32-bit integer type
>>> There is no 32-bit floating-point type
