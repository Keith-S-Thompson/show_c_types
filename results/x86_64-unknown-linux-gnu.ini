[configuration]
    SHOW_C_TYPES_VERSION = 2018-12-02
    config.guess = x86_64-unknown-linux-gnu
    compiler = gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
    compile_command = gcc -std=c11 -pedantic

[predefined_macros]
    __STDC__ = 1
    __STDC_HOSTED__ = 1
    __STDC_VERSION__ = 201112L
    __STDC_ISO_10646__ = 201706L
    __STDC_MB_MIGHT_NEQ_WC__ = undefined
    __STDC_UTF_16__ = 1
    __STDC_UTF_32__ = 1
    __STDC_ANALYZABLE__ = undefined
    __STDC_IEC_559_COMPLEX__ = 1
    __STDC_LIB_EXT1__ = undefined
    __STDC_NO_ATOMICS__ = undefined
    __STDC_NO_COMPLEX__ = undefined
    __STDC_NO_THREADS__ = 1
    __STDC_NO_VLA__ = undefined

[<limits.h>]
    kind = header
    CHAR_BIT = 8
    SCHAR_MIN = -128
    SCHAR_MAX = 127
    UCHAR_MAX = 255
    CHAR_MIN = -128
    CHAR_MAX = 127
    MB_LEN_MAX = 16
    SHRT_MIN = -32768
    SHRT_MAX = 32767
    USHRT_MAX = 65535
    INT_MIN = -2147483648
    INT_MAX = 2147483647
    UINT_MAX = 4294967295
    LONG_MIN = -9223372036854775808
    LONG_MAX = 9223372036854775807
    ULONG_MAX = 18446744073709551615
    LLONG_MIN = -9223372036854775808
    LLONG_MAX = 9223372036854775807
    ULLONG_MAX = 18446744073709551615

[<float.h>]
    kind = header
    FLT_ROUNDS = 1
    FLT_ROUNDS_meaning = "to nearest"
    FLT_EVAL_METHOD = 0
    FLT_EVAL_METHOD_meaning = "evaluate to range and precision of type"
    FLT_HAS_SUBNORM = 1
    FLT_HAS_SUBNORM_meaning = "present"
    DBL_HAS_SUBNORM = 1
    DBL_HAS_SUBNORM_meaning = "present"
    LDBL_HAS_SUBNORM = 1
    LDBL_HAS_SUBNORM_meaning = "present"
    FLT_RADIX = 2
    FLT_MANT_DIG = 24
    DBL_MANT_DIG = 53
    LDBL_MANT_DIG = 64
    FLT_DECIMAL_DIG = 9
    DBL_DECIMAL_DIG = 17
    LDBL_DECIMAL_DIG = 21
    DECIMAL_DIG = 21
    FLT_DIG = 6
    DBL_DIG = 15
    LDBL_DIG = 18
    FLT_MIN_EXP = -125
    DBL_MIN_EXP = -1021
    LDBL_MIN_EXP = -16381
    FLT_MIN_10_EXP = -37
    DBL_MIN_10_EXP = -307
    LDBL_MIN_10_EXP = -4931
    FLT_MAX_EXP = 128
    DBL_MAX_EXP = 1024
    LDBL_MAX_EXP = 16384
    FLT_MAX_10_EXP = 38
    DBL_MAX_10_EXP = 308
    LDBL_MAX_10_EXP = 4932
    FLT_MAX = 3.402823e+38
    DBL_MAX = 1.797693e+308
    LDBL_MAX = 1.189731e+4932
    FLT_EPSILON = 1.192093e-07
    DBL_EPSILON = 2.220446e-16
    LDBL_EPSILON = 1.084202e-19
    FLT_MIN = 1.175494e-38
    DBL_MIN = 2.225074e-308
    LDBL_MIN = 3.362103e-4932
    FLT_TRUE_MIN = 1.401298e-45
    DBL_TRUE_MIN = 4.940656e-324
    LDBL_TRUE_MIN = 3.645200e-4951

[<stdint.h>]
    kind = header
    header_exists = true
    INT8_MIN = -128
    INT8_MAX = 127
    UINT8_MAX = 255
    INT16_MIN = -32768
    INT16_MAX = 32767
    UINT16_MAX = 65535
    INT32_MIN = -2147483648
    INT32_MAX = 2147483647
    UINT32_MAX = 4294967295
    INT64_MIN = -9223372036854775808
    INT64_MAX = 9223372036854775807
    UINT64_MAX = 18446744073709551615
    INTMAX_MIN = -9223372036854775808
    INTMAX_MAX = 9223372036854775807
    UINTMAX_MAX = 18446744073709551615
    INT_LEAST8_MIN = -128
    INT_LEAST8_MAX = 127
    UINT_LEAST8_MAX = 255
    INT_LEAST16_MIN = -32768
    INT_LEAST16_MAX = 32767
    UINT_LEAST16_MAX = 65535
    INT_LEAST32_MIN = -2147483648
    INT_LEAST32_MAX = 2147483647
    UINT_LEAST32_MAX = 4294967295
    INT_LEAST64_MIN = -9223372036854775808
    INT_LEAST64_MAX = 9223372036854775807
    UINT_LEAST64_MAX = 18446744073709551615
    INT_FAST8_MIN = -128
    INT_FAST8_MAX = 127
    UINT_FAST8_MAX = 255
    INT_FAST16_MIN = -9223372036854775808
    INT_FAST16_MAX = 9223372036854775807
    UINT_FAST16_MAX = 18446744073709551615
    INT_FAST32_MIN = -9223372036854775808
    INT_FAST32_MAX = 9223372036854775807
    UINT_FAST32_MAX = 18446744073709551615
    INT_FAST64_MIN = -9223372036854775808
    INT_FAST64_MAX = 9223372036854775807
    UINT_FAST64_MAX = 18446744073709551615
    INTPTR_MIN = -9223372036854775808
    INTPTR_MAX = 9223372036854775807
    UINTPTR_MAX = 18446744073709551615
    PTRDIFF_MIN = -9223372036854775808
    PTRDIFF_MAX = 9223372036854775807
    SIG_ATOMIC_MIN = -2147483648
    SIG_ATOMIC_MAX = 2147483647
    SIZE_MAX = 18446744073709551615
    WCHAR_MIN = -2147483648
    WCHAR_MAX = 2147483647
    WINT_MIN = 0
    WINT_MAX = 4294967295

[bool]
    kind = integer_type
    size = 8
    signedness = unsigned
    align = 8

[enum small_enum]
    kind = integer_type
    size = 32
    signedness = unsigned
    endianness = little-endian
    align = 32

[enum small_signed_enum]
    kind = integer_type
    size = 32
    signedness = signed
    endianness = little-endian
    align = 32

[char]
    kind = integer_type
    size = 8
    min = -128
    max = 127
    signedness = signed
    align = 8

[signed char]
    kind = integer_type
    size = 8
    min = -128
    max = 127
    signedness = signed
    align = 8

[unsigned char]
    kind = integer_type
    size = 8
    max = 255
    signedness = unsigned
    align = 8

[short]
    kind = integer_type
    size = 16
    min = -32768
    max = 32767
    signedness = signed
    endianness = little-endian
    align = 16

[unsigned short]
    kind = integer_type
    size = 16
    max = 65535
    signedness = unsigned
    endianness = little-endian
    align = 16

[int]
    kind = integer_type
    size = 32
    min = -2147483648
    max = 2147483647
    signedness = signed
    endianness = little-endian
    align = 32

[unsigned]
    kind = integer_type
    size = 32
    max = 4294967295
    signedness = unsigned
    endianness = little-endian
    align = 32

[long]
    kind = integer_type
    size = 64
    min = -9223372036854775808
    max = 9223372036854775807
    signedness = signed
    endianness = little-endian
    align = 64

[unsigned long]
    kind = integer_type
    size = 64
    max = 18446744073709551615
    signedness = unsigned
    endianness = little-endian
    align = 64

[long long]
    kind = integer_type
    size = 64
    min = -9223372036854775808
    max = 9223372036854775807
    signedness = signed
    endianness = little-endian
    align = 64

[unsigned long long]
    kind = integer_type
    size = 64
    max = 18446744073709551615
    signedness = unsigned
    endianness = little-endian
    align = 64

[float]
    kind = floating_type
    size = 32
    alignment = 32
    mantissa_bits = 24
    min_exp = -125
    max_exp = 128
    looks_like = "32-bit IEEE, little-endian"

[double]
    kind = floating_type
    size = 64
    alignment = 64
    mantissa_bits = 53
    min_exp = -1021
    max_exp = 1024
    looks_like = "64-bit IEEE, little-endian"

[long double]
    kind = floating_type
    size = 128
    alignment = 128
    mantissa_bits = 64
    min_exp = -16381
    max_exp = 16384
    looks_like = "Unrecognized floating-point format"

[ptrdiff_t]
    kind = integer_type
    size = 64
    min = -9223372036854775808
    max = 9223372036854775807
    signedness = signed
    endianness = little-endian
    align = 64

[size_t]
    kind = integer_type
    size = 64
    max = 18446744073709551615
    signedness = unsigned
    endianness = little-endian
    align = 64

[wchar_t]
    kind = integer_type
    size = 32
    min = -2147483648
    max = 2147483647
    signedness = signed
    endianness = little-endian
    align = 32

[time_t]
    kind = integer_type
    size = 64
    signedness = signed
    endianness = little-endian
    align = 64

[clock_t]
    kind = integer_type
    size = 64
    signedness = signed
    endianness = little-endian
    align = 64

[struct tm]
    kind = type
    size = 448
    alignment = 64

[void*]
    kind = type
    size = 64
    alignment = 64

[char*]
    kind = type
    size = 64
    alignment = 64

[int*]
    kind = type
    size = 64
    alignment = 64

[double*]
    kind = type
    size = 64
    alignment = 64

[struct{int x;}*]
    kind = type
    size = 64
    alignment = 64

[void(*)(void)]
    kind = type
    size = 64
    alignment = 64

[double(*)(int*,char**)]
    kind = type
    size = 64
    alignment = 64

