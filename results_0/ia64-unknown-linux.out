char                   8 bits   signed, align   8, undefined endianness
signed char            8 bits   signed, align   8, undefined endianness
unsigned char          8 bits unsigned, align   8, undefined endianness

short                 16 bits   signed, align  16, little-endian
unsigned short        16 bits unsigned, align  16, little-endian

int                   32 bits   signed, align  32, little-endian
unsigned              32 bits unsigned, align  32, little-endian

long                  64 bits   signed, align  64, little-endian
unsigned long         64 bits unsigned, align  64, little-endian

long long             64 bits   signed, align  64, little-endian
unsigned long long    64 bits unsigned, align  64, little-endian

float                 32 bits, align  32,
                     mantissa is  24 bits,
                     exponent is  8 bits, range   -125 ..    128
        Looks like 32-bit IEEE, little-endian

double                64 bits, align  64,
                     mantissa is  53 bits,
                     exponent is 11 bits, range  -1021 ..   1024
        Looks like 64-bit IEEE, little-endian

long double          128 bits, align 128,
                     mantissa is  64 bits,
                     exponent is 15 bits, range -16381 ..  16384
        Unrecognized floating-point format

ptrdiff_t             64 bits   signed, align  64, little-endian
size_t                64 bits unsigned, align  64, little-endian
wchar_t               32 bits   signed, align  32, little-endian

time_t                64 bits   signed, align  64, little-endian
clock_t               64 bits   signed, align  64, little-endian
struct tm            448 bits (14 words) align  64

void*                 64 bits align  64
char*                 64 bits align  64
int*                  64 bits align  64
double*               64 bits align  64
struct{int x;}*       64 bits align  64
simple_func_ptr       64 bits align  64
        [typedef void(*simple_func_ptr)(void);]
complex_func_ptr      64 bits align  64
        [typedef double(*complex_func_ptr)(int*,char**);]
